# Run as a less privileged user for security
user www;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Configures default error logger
error_log /var/log/nginx/error.log warn;

# PID file
pid /var/run/nginx.pid;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


# 1 worker -> 1024 connections
events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}


http {
        # Includes mapping of file name extensions to MIME types of responses
        # and defines the default type.
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Don't tell nginx version to the clients. Default is 'on'.
        server_tokens off;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable. Default is '1m'.
        client_max_body_size 1m;

        ## Logs
        # Specifies the main log format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

        # Sets the path, format, and configuration for a buffered log write
        access_log /var/log/nginx/access.log  main;

        # Sendfile copies data between one FD and other from within the kernel,
        # which is more efficient than read() + write(). Default is off.
        sendfile on;

        # Causes nginx to attempt to send its HTTP response head in one packet,
        # instead of using partial frames. Default is 'off'.
        tcp_nopush on;

        # Tell Nginx to enable the Nagle buffering algorithm for TCP packets, which
        # collates several smaller packets together into one larger packet, thus saving
        # bandwidth at the cost of a increase to latency.
        #
        # "When downloading a full Web page, TCP_NODELAY can save you up to
        # 0.2 second on every HTTP request, which is nice. When it comes to
        # online gaming or high frequency trading, getting rid of latency
        # is critical even at the price of a relative network saturation."
        # - https://t37.net/nginx-optimization-understanding-sendfile-tcp_nodelay-and-tcp_nopush.html
        tcp_nodelay on;

        ## Timeout
        # If a client does not receive anything within the time set in this directive, a connection is closed. 
        keepalive_timeout 60s;
        reset_timedout_connection on;
        client_body_timeout 5s;
        client_header_timeout 5s;
        send_timeout 5;

        # limit the number of connections per IP
        #limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
        # limit the number of requests for this session
        #limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

        ## Gzip
        # Enable gzipping of responses
        gzip on;
        # Disable for old browser
        gzip_disable "MSIE [1-6] \.";
        # Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
        gzip_vary on;

        server {
            listen          80;
            listen          [::]:80;
            server_name     localhost;

            return 301 https://$server_name$request_uri;

        }

        server {
            listen          443 ssl;
            listen          [::]:443 ssl;
            server_name     localhost;

            # SSL cert and key
            ssl_certificate /etc/ssl/certs/localhost.crt;
            ssl_certificate_key /etc/ssl/certs/localhost.key;

            # Enables the specified protocols
            ssl_protocols TLSv1.2 TLSv1.3;

            # Path of the file with Diffie-Hellman parameters for EDH ciphers.
            # TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
            #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

            # Specifies that our cipher suits should be preferred over client ciphers.
            # Default is 'off'.
            ssl_prefer_server_ciphers on;

            # Enables a shared SSL cache with size that can hold around 8000 sessions.
            # Default is 'none'.
            ssl_session_cache shared:SSL:2m;

            # Specifies a time during which a client may reuse the session parameters.
            # Default is '5m'.
            ssl_session_timeout 1h;

            # Disable TLS session tickets (they are insecure). Default is 'on'.
            ssl_session_tickets off;

            # Root
            location / {
                root   /var/www/;
                index  index.html index.htm;
            }

            # 404 custom page
            error_page  404 /404.html;
            # Use internal to prevent return 404; recursion
            location = /404.html {
                internal;
            }

            # Redirect server error pages to the static page /50x.html
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                    root   html;
            }

            # WordPress
            location /wordpress {
                return 307 https://$server_name:5050;
            }

            # PhpMyAdmin
            location /phpmyadmin {
                proxy_pass https://$server_name:5000;
            }

        }

    # WARNING: Don't use this directory for virtual hosts anymore.
    # This include will be moved to the root context in Alpine 3.14.
    #include /etc/nginx/conf.d/*.conf;

}
